
:root, :root[data-force-color-mode="light"] {
  --main-bg-color: white;
  --main-text-color: black;
  --topbar-background-color: rgb(150, 150, 150);
  --knowledge-link-text-color: rgb(41, 91, 110);
  --knowledge-content-text-color: black;
  --knowledge-content-background-color: rgb(222, 222, 222);
  --knowledge-content-border-color: black;
  --knowledge-content-shadow-color: #888888;
  --image-invert-amount: .13;
}

/* checks the the system colorscheme */
@media (prefers-color-scheme: dark) {
  :root {
    --main-bg-color: rgb(30, 30, 30);
    --main-text-color: rgb(220, 220, 220);
    --topbar-background-color: rgb(70, 70, 70);
    --knowledge-link-text-color: rgb(200, 91, 110);
    --knowledge-content-text-color: rgb(220, 220, 220);
    --knowledge-content-background-color: rgb(80, 80, 80);
    --knowledge-content-border-color: white;
    --knowledge-content-shadow-color: rgb(20, 20, 20);
  	--image-invert-amount: 0.68;
  }
}

/* manual override of colorscheme, TODO can duplication be removed ?*/
:root[data-force-color-mode="dark"] { 
    --main-bg-color: rgb(30, 30, 30);
    --main-text-color: rgb(220, 220, 220);
    --topbar-background-color: rgb(70, 70, 70);
    --knowledge-link-text-color: rgb(200, 91, 110);
    --knowledge-content-text-color: rgb(220, 220, 220);
    --knowledge-content-background-color: rgb(80, 80, 80);
    --knowledge-content-border-color: white;
    --knowledge-content-shadow-color: rgb(20, 20, 20);
  	--image-invert-amount: 0.68;
}

/* Visually hide the checkbox and label text  */
#toggle-darkmode {
	display: none;
}

#toggle-darkmode + label > span {
	position: absolute;
	overflow: hidden;
	clip: rect(0 0 0 0);
	height: 1px;
	width: 1px;
	margin: -1px;
	padding: 0;
	border: 0;
}

/* Inject Light/Dark Mode Icon (based on checkbox value) */
#toggle-darkmode + label:after {
	font-size: 2em;
	content: "ðŸ”†";
}
#toggle-darkmode:checked + label:after {
	content: "ðŸŒ™";
}

/* general elements */

body {
  color: var(--main-text-color);
  background-color: var(--main-bg-color);
  font-size: 150%;
  /* precondition ../LatinModern/mathfonts.css included before */
  font-family: Latin Modern Math;
}

math[display="block"] {
  padding: 1.5em;
}

img {
	filter: invert(var(--image-invert-amount))
}

a {
	color: green;
	text-decoration: none;
}

table, th, td {
    border: 1px solid var(--main-text-color);
}

/* top bar */

#topbar {
  position: relative; /* so that the button can be placed in the corner */
}

/* content formatting */

.boxed {
	border: 1px solid var(--main-text-color);
}

.thin-wrapper {
    margin: 0 10%;
}

.align {
	margin: 2em auto;
}

.centered-content { /* used for centered equations */
  display: block;
  text-align: center;
  margin: 2em;
}

.centered-content>div { /* used for centered equations */
	margin: 1em;
}

.knowledge-link {
  color: var(--knowledge-link-text-color);
  cursor: pointer;
}

/* a line with text in the middle */

.line-with-centered-text {
    display: flex;
    align-items: center;
    text-align: center;
    margin: .5em 0;
}

.line-with-centered-text::before,
.line-with-centered-text::after {
    content: '';
    flex: 1;
    border-bottom: 1px solid var(--main-text-color);
}

.line-with-centered-text:not(:empty)::before {
    margin-right: .25em;
}

.line-with-centered-text:not(:empty)::after {
    margin-left: .25em;
}

.line-with-centered-text button {
    background-color: rgba(0,0,0,0);
    color: var(--main-text-color);
}


/* custom content styling */

fieldset>legend>h1 {
    margin: 0 0.5em;
}

.definition, .lemma, .theorem, .corollary, .proposition, .exercise, .proof {
  display: block;
  /* font-style: italic; */
  /* font-size: 24px; */
  /* font-family: "Times New Roman"; */
  color: var(--knowledge-content-text-color);
  border-radius: 10px;
  background-color: var(--knowledge-content-background-color);
  box-shadow: 5px 10px 8px var(--knowledge-content-shadow-color);
  margin: 4em 0 4em 0;
  border: 2px solid var(--knowledge-content-border-color);
}

.definition>.title, .lemma>.title, .theorem>.title, .corollary>.title, .proposition>.title, .exercise>.title, .proof>.title {
    font-style: normal;
    display: inline-block;
    width: -webkit-fill-available;
    width: -moz-available;
    width: stretch;
    color: white;
    border-radius: 10px 10px 0 0;
    padding: 8px 15px 8px 15px;
}

.definition, .lemma, .theorem, .corollary, .proposition, .exercise, .proof {
}

.definition>.content, .lemma>.content, .theorem>.content, .corollary>.content, .proposition>.content, .exercise>.content, .proof>.content {
    padding: 15px 15px 15px 15px;
}

.new-proof>.content{
    padding: 15px 15px 15px 15px;
}

.definition>.title::before {
  content: "Definition: "
}

.definition>.title {
  background-color: rgb(38, 38, 134);
}

.theorem>.title::before {
  content: "Theorem: "
}

.theorem>.title {
  background-color: rgb(38, 134, 38);
}

.proposition>.title::before {
  content: "Proposition: "
}

.proposition>.title {
  background-color: rgb(38, 134, 134);
}

.lemma>.title::before {
  content: "Lemma: "
}

.lemma>.title {
  background-color: rgb(134, 38, 38);
}

.corollary>.title::before {
  content: "Corollary: "
}

.corollary>.title {
  background-color: rgb(134, 34, 134);
}

.proof>.title::before {
  content: "Proof"
}

.proof>.title {
  background-color: black;
}

/* add a tombstone to the end of every opened proof */
/* TODO this no longer works, so figure out a way we can re-do this functionality */
.proof details[open]::after {
    content: "â–¡";
    text-align: right;
    display: block;
}

.exercise>.title::before {
  content: "Exercise: "
}

.exercise>.title {
  background-color: grey;
}

/* animations */


@keyframes scale-in {
	from {
		transform: scale(0);
		opacity: 0;
	}
	to {
		transform: scale(1);
		opacity: 1;	
	}
}

.opened-knowledge {
  animation: scale-in .2s linear;
  transform-origin: 0 50%;
}
